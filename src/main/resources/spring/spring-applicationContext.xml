<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
           http://www.springframework.org/schema/aop   
           http://www.springframework.org/schema/aop/spring-aop-4.1.xsd   
           http://www.springframework.org/schema/context  

           http://www.springframework.org/schema/context/spring-context-4.1.xsd 
           http://www.springframework.org/schema/task 
           http://www.springframework.org/schema/task/spring-task-4.0.xsd">
	<!-- 配置要扫描的包 ,有多个可以用';'号隔开,也可写多个context:component-scan -->
	<context:component-scan
		base-package="com.pro.xwt.*.controller;com.pro.xwt.*.mapper;com.pro.xwt.*.service;com.pro.xwt.common.utils;com.pro.xwt.common.timer" />

	<task:annotation-driven scheduler="qbScheduler"
		mode="proxy" />
	<task:scheduler id="qbScheduler" pool-size="10" />


	<!-- 启动对@AspectJ注解的支持 -->
	<!--通知spring使用cglib而不是jdk的来生成代理方法 AOP可以拦截到Controller -->
	<!-- <aop:aspectj-autoproxy proxy-target-class="true" />
	<bean id="messageAspect" class="com.pro.xwt.rest.aspect.MessageAspect" /> -->
	
	<!-- 引入属性文件:方式二 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="locations">
			<list>
				<value>classpath:jdbc_dev.properties</value>
				<value>classpath:project_dev.properties</value>
				<!-- <value>classpath:activemq.properties</value> -->
			</list>
		</property>
	</bean>
	  <!-- 支持上传文件 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/> 
    
	<import resource="spring-mybatis.xml" />
</beans>    